# protocol warnings

:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Atom':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.BitString':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Float':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Function':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Integer':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.List':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Map':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.PID':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Port':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Reference':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.AccountInterface.Tuple':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Atom':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.BitString':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Float':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Function':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Integer':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.List':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Map':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.PID':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Port':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Reference':'__impl__'/1
:0: Unknown function 'Elixir.EVM.Interface.BlockInterface.Tuple':'__impl__'/1


-------------------------------
# TODO: rewrite mocked protocol typespecs
-------------------------------
lib/evm/interface/mock/mock_account_interface
lib/evm/interface/mock/mock_block_interface
lib/evm/machine_code

-------------------------------
# apps/evm/lib/evm/builtin.ex warnings
-------------------------------
apps/evm/lib/evm/builtin.ex:60: Call to missing or unexported function 'Elixir.ExthCrypto.Signature':version/0

-------------------------------
# Introduced by Elixir 1.6.4 https://github.com/elixir-lang/elixir/issues/7508
-------------------------------
lib/trie/helper.ex:41: Guard test is_binary(_@1::<<_:4>>) can never succeed
lib/trie/helper.ex:41: The variable _@1 can never match since previous clauses completely covered the type <<_:4>>

-------------------------------
# blockchain/block.ex warnings
-------------------------------
apps/blockchain/lib/blockchain/block.ex:438: Function gen_child_block/2 has no local return
apps/blockchain/lib/blockchain/block.ex:438: Function gen_child_block/3 has no local return
apps/blockchain/lib/blockchain/block.ex:443: The call 'Elixir.Blockchain.Block':set_block_number(#{'__struct__':='Elixir.Blockchain.Block', 'block_hash':='nil', 'header':=#{'__struct__':='Elixir.Block.Header', 'beneficiary':=_, 'difficulty':='nil', 'extra_data':=_, 'gas_limit':=0, 'gas_used':=0, 'logs_bloom':=<<_:2048>>, 'mix_hash':=_, 'nonce':=<<_:64>>, 'number':='nil', 'ommers_hash':=<<_:256>>, 'parent_hash':='nil', 'receipts_root':=<<_:256>>, 'state_root':=_, 'timestamp':=_, 'transactions_root':=<<_:256>>}, 'ommers':=[], 'transactions':=[]},Vparent_block@1::any()) breaks the contract (t(),t()) -> t()
apps/blockchain/lib/blockchain/block.ex:449: Invalid type specification for function 'Elixir.Blockchain.Block':gen_child_header/2. The success typing is (_,'nil' | [{atom(),_}] | map()) -> #{'__struct__':='Elixir.Block.Header', 'beneficiary':=_, 'difficulty':='nil', 'extra_data':=_, 'gas_limit':=0, 'gas_used':=0, 'logs_bloom':=<<_:2048>>, 'mix_hash':=_, 'nonce':=<<_:64>>, 'number':='nil', 'ommers_hash':=<<_:256>>, 'parent_hash':='nil', 'receipts_root':=<<_:256>>, 'state_root':=_, 'timestamp':=_, 'transactions_root':=<<_:256>>}
apps/blockchain/lib/blockchain/block.ex:714: Invalid type specification for function 'Elixir.Blockchain.Block':put_state/2. The success typing is (#{'__struct__':='Elixir.Blockchain.Block', 'header':=#{'__struct__':='Elixir.Block.Header', 'state_root':=_, _=>_}, _=>_},atom() | #{'root_hash':=_, _=>_}) -> #{'__struct__':='Elixir.Blockchain.Block', 'header':=#{'__struct__':='Elixir.Block.Header', 'state_root':=_, _=>_}, _=>_}

-------------------------------
# blockchain/chain.ex
-------------------------------
apps/blockchain/lib/blockchain/chain.ex:94: Invalid type specification for function 'Elixir.Blockchain.Chain':load_chain/1. The success typing is (atom()) -> #{'__struct__':='Elixir.Blockchain.Chain', 'accounts':=map(), 'engine':=map(), 'genesis':=#{'author':=binary(), 'difficulty':=non_neg_integer(), 'extra_data':=binary(), 'gas_limit':=non_neg_integer(), 'parent_hash':=binary(), 'timestamp':=non_neg_integer()}, 'name':=_, 'nodes':=_, 'params':=#{'account_start_nonce':=non_neg_integer(), 'block_reward':=non_neg_integer(), 'eip155_transition':=_, 'eip86_transition':=non_neg_integer(), 'eip98_transition':=non_neg_integer(), 'gas_limit_bound_divisor':=non_neg_integer(), 'maximum_extra_data_size':=non_neg_integer(), 'min_gas_limit':=non_neg_integer()}}

-------------------------------
# blockchain/genesis.ex
-------------------------------
apps/blockchain/lib/blockchain/genesis.ex

-------------------------------
# blockchain/account.ex
-------------------------------
apps/blockchain/lib/blockchain/account.ex

-------------------------------
# blockchain/transaction.ex
-------------------------------
apps/blockchain/lib/blockchain/transaction.ex

-------------------------------
# blockchain/application.ex
-------------------------------
apps/blockchain/lib/blockchain/application.ex:16: The call 'Elixir.EVM.Debugger':break_on([{'address',binary()},...]) will never return since the success typing is (['address']) -> integer() and the contract is (elixir:keyword('Elixir.EVM.Debugger.Breakpoint':conditions())) -> 'Elixir.EVM.Debugger.Breakpoint':id()

-------------------------------
# Ignores the whole contract and account_interface file
-------------------------------
apps/blockchain/lib/blockchain/contract.ex
apps/blockchain/lib/blockchain/contract/create_contract.ex
apps/blockchain/lib/blockchain/contract/message_call.ex
apps/blockchain/lib/blockchain/interface/account_interface.ex

-------------------------------
# Ignores state test generation script
-------------------------------
apps/blockchain/scripts/generate_state_tests.ex
